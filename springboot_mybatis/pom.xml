<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.yy</groupId>
    <artifactId>springboot_mybatis</artifactId>
    <version>0.0.3-SNAPSHOT</version>
    <packaging>jar</packaging>
    <description>spring boot start</description>


    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.10.RELEASE</version>
    </parent>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>1.3.2</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>1.1.10</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.3.2</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.29</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.16</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.7.0</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.7.0</version>
        </dependency>

    </dependencies>

    <profiles>
        <!--开发环境-->
        <profile>
            <id>local</id>
            <properties>
                <!--
                    NOTE: difference between 'maven profile' and 'spring profile'
                    ,please read url -> https://stackoverflow.com/questions/42390860/configure-active-profile-in-springboot-via-maven
                -->

                <!--自定义注解 这里只是设置maven profile而不是spring profile
                    , 如果想设置spring profile且引用这里的profile, 需要在application.yml中引用: profiles.active: @profileActive@
                -->
                <profileActive>local</profileActive>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                        <includes>
                            <!-- 原来的配置为<include>application.yml</include>
                                这里一定要有通配符，不然后加的配置文件如application-test.yml加载不上，问题还不好查
                            -->
                            <include>application*.yml</include>
                        </includes>
                    </resource>
                </resources>
            </build>
        </profile>

        <!--dev-->
        <profile>
            <id>dev</id>
            <properties>
                <!--自定义注解-->
                <profileActive>dev</profileActive>
            </properties>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                        <includes>
                            <include>application*.yml</include>
                        </includes>
                    </resource>
                </resources>
            </build>
        </profile>

        <!--阿里云-->
        <profile>
            <id>aliyun</id>
            <properties>
                <!--自定义注解-->
                <profileActive>aliyun</profileActive>
            </properties>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                        <includes>
                            <include>application*.yml</include>
                        </includes>
                    </resource>
                </resources>
            </build>
        </profile>

        <!--腾讯云-->
        <profile>
            <id>tengxun</id>
            <properties>
                <!--自定义注解-->
                <profileActive>tengxun</profileActive>
            </properties>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                        <includes>
                            <include>application*.yml</include>
                        </includes>
                    </resource>
                </resources>
            </build>
        </profile>
    </profiles>


    <!--  如果想发布项目到nexus仓库  -->
    <!-- 这里的id必须和setting.xml文件中server的id值一一保持一致 -->
    <distributionManagement>
        <!-- Release包的管理 deploy打包时的version需要没有Snapshot字样 -->
        <repository>
            <id>releases</id>
            <url>http://47.98.189.37:8081/repository/skyler-release/</url>
        </repository>
        <!-- Snapshot包的管理 -->
        <snapshotRepository>
            <id>snapshots</id>
            <url>http://47.98.189.37:8081/repository/skyler-snapshot/</url>
        </snapshotRepository>
    </distributionManagement>

    <!-- nexus代理中央仓库配置 -->
    <!-- 既可以放在setting.xml中(表示全局配置)，也可以放在pom.xml中(表示此应用配置) -->
    <!--<repositories>-->
        <!--<repository>-->
            <!--<id>nexus</id>-->
            <!--<name>Nexus Repository</name>-->
            <!--<url>http://47.98.189.37:8081/repository/skyler-group/</url>-->
            <!--&lt;!&ndash;snapshots默认是关闭的,需要开启  &ndash;&gt;-->
            <!--<snapshots>-->
                <!--<enabled>true</enabled>-->
            <!--</snapshots>-->
            <!--<releases>-->
                <!--<enabled>true</enabled>-->
            <!--</releases>-->
        <!--</repository>-->
    <!--</repositories>-->
    <!--<pluginRepositories>-->
        <!--<pluginRepository>-->
            <!--<id>nexus</id>-->
            <!--<name>Nexus Plugin Repository</name>-->
            <!--<url>http://47.98.189.37:8081/repository/skyler-group/</url>-->
            <!--&lt;!&ndash;snapshots默认是关闭的,需要开启  &ndash;&gt;-->
            <!--<snapshots>-->
                <!--<enabled>true</enabled>-->
            <!--</snapshots>-->
            <!--<releases>-->
                <!--<enabled>true</enabled>-->
            <!--</releases>-->
        <!--</pluginRepository>-->
    <!--</pluginRepositories>-->

    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <filters>
            <filter>src/main/resources/profile/${profileActive}.properties</filter>
        </filters>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>messages/**</exclude>
                    <exclude>mybatis/**</exclude>
                    <exclude>*.yml</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>messages/**</include>
                    <include>mybatis/**</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <!-- skip=true表示跳过默认deploy插件的执行,即deploy时会跳过本module,多用于多module排除某个module的情形 -->
                <!--<configuration>-->
                    <!--<skip>true</skip>-->
                <!--</configuration>-->
            </plugin>
            <!-- 打包源码插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <!-- attach:表示打jar包同时是否打源码jar包. 默认为true -->
                <configuration>
                    <attach>true</attach>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <!-- 去掉打不了源码jar包 -->
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

    </build>

</project>