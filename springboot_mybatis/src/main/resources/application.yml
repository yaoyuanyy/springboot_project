
spring:
  datasource:
    druid:
      ## 基础配置
      url: @db.url@
      username: @db.username@
      password: @db.password@
      driver-class-name: @db.driverlassName@

      ## 连接池配置
      initialSize: 5
      minIdle: 3
      maxActive: 21
      maxWait: 60000
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      ## 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,log4j
      maxPoolPreparedStatementPerConnectionSize: 20
      useGlobalDataSourceStat: true
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      ## 监控配置
      # WebStatFilter配置，说明请参考Druid Wiki
      # 是否启用StatFilter默认值true
      web-stat-filter:
        enabled: false
        url-pattern: /*
        exclusions: '*.js,*.css,/druid/*,*.html'
#        profile-enable:
      # StatViewServlet配置，说明请参考Druid Wiki
      # 是否启用StatViewServlet默认值true
      stat-view-servlet:
        # 如设置成false，则http://localhost:8000/druid/spring.html无法访问，但是接口可以访问：http://localhost:8000/druid/stat
        enabled: false
#        url-pattern: /*
        reset-enable: true
        login-username: admin
        login-password: 123456
#        allow:
#        deny:

  profiles:
    active: @profileActive@

#mybatis 配置
mybatis:
  ## Locations of Mapper xml config file
  mapperLocations: classpath*:com/yy/**/mapper/*.xml
  ## 实体类包路径 Packages to search for type aliases. (Package delimiters are ",; \t\n")
  typeAliasesPackage: com.yy.**.bean
  ## Location of MyBatis xml config file.
  ## 注意：这个属性与mybatis.configuration二选一
  config-location: classpath:mybatis/mybatis-config.xml
  ##  检查 mybatis 配置是否存在，一般命名为 mybatis-config.xml
  check-config-location: true
  ## Packages to search for type handlers. (Package delimiters are ",; \t\n")
  # mybatis.typeHandlersPackage
  ## Executor type: SIMPLE, REUSE, BATCH 默认是 SIMPLE
  # mybatis.executorType


#自定义：配置文件AppConfig.java是否开启
  skyler:
    enable: true



server:
  port: @server.port@

logging:
  path: @logging.path@

#打印自动配置(*AutoConfiguration)信息
debug: @debug@

# actuator监控端点是否打开，默认打开，即不能访问 http://localhost:8000/env等
management:
  security:
    enabled: false

# 关闭所有的端点，除了env info,此效果需要management.security.enabled=false才能生效
endpoints:
  env:
    enabled: true
  info:
    enabled: true
  enabled: false



